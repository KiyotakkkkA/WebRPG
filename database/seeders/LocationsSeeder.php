<?php

namespace Database\Seeders;

use App\Models\Location;
use App\Models\LocationRequirement;
use Illuminate\Database\Seeder;
use Illuminate\Support\Facades\DB;

class LocationsSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        // –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π
        DB::statement('SET FOREIGN_KEY_CHECKS=0;');

        // –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        DB::table('location_connections')->truncate();
        DB::table('location_requirements')->truncate();
        DB::table('location_objects')->truncate(); // –î–æ–±–∞–≤–ª—è–µ–º –æ—á–∏—Å—Ç–∫—É –æ–±—ä–µ–∫—Ç–æ–≤
        DB::table('character_discovered_locations')->truncate(); // –û—á–∏—â–∞–µ–º —Å–≤—è–∑–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π —Å –ª–æ–∫–∞—Ü–∏—è–º–∏
        DB::table('locations')->truncate();

        // –í–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π –æ–±—Ä–∞—Ç–Ω–æ
        DB::statement('SET FOREIGN_KEY_CHECKS=1;');

        // –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –ª–æ–∫–∞—Ü–∏–∏
        $locations = [
            [
                'id' => 1,
                'name' => '–õ–∞–≥–µ—Ä—å –≤—ã–∂–∏–≤—à–∏—Ö',
                'description' => '–ó–∞—â–∏—â–µ–Ω–Ω–æ–µ –º–µ—Å—Ç–æ, –≥–¥–µ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è —Ç–µ, –∫—Ç–æ —Å–º–æ–≥ –ø–µ—Ä–µ–∂–∏—Ç—å –ø–µ—Ä–≤—ã–µ –¥–Ω–∏ –ø—Ä–æ–∫–ª—è—Ç–∏—è.',
                'image_url' => '/images/locations/novice-camp.jpg',
                'danger_level' => 1,
                'is_default' => true,
                'is_discoverable' => true,
                'position_x' => 0,
                'position_y' => 0,
            ],
            [
                'id' => 2,
                'name' => '–õ–µ—Å–∞ –¢–µ–Ω–µ–π',
                'description' => '–î—Ä–µ–≤–Ω–∏–µ –ª–µ—Å–∞, –≥–¥–µ –¥–µ—Ä–µ–≤—å—è —à–µ–ø—á—É—Ç —Ç–∞–π–Ω—ã –ø—Ä–æ—à–ª–æ–≥–æ –∏ —Å–∫—Ä—ã–≤–∞—é—Ç –º–Ω–æ–≥–æ—á–∏—Å–ª–µ–Ω–Ω—ã–µ –æ–ø–∞—Å–Ω–æ—Å—Ç–∏.',
                'image_url' => '/images/locations/shadow-woods.jpg',
                'danger_level' => 3,
                'is_default' => false,
                'is_discoverable' => true,
                'position_x' => 1,
                'position_y' => 1,
            ],
            [
                'id' => 3,
                'name' => '–ó–∞–±—ã—Ç—ã–µ —Ä—É–∏–Ω—ã',
                'description' => '–û—Å—Ç–∞–Ω–∫–∏ –¥—Ä–µ–≤–Ω–µ–π —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏–∏, –ø–æ–ª–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –∏ —Å–º–µ—Ä—Ç–µ–ª—å–Ω—ã—Ö –ª–æ–≤—É—à–µ–∫.',
                'image_url' => '/images/locations/forgotten-ruins.jpg',
                'danger_level' => 5,
                'is_default' => false,
                'is_discoverable' => true,
                'position_x' => 2,
                'position_y' => 0,
            ],
            [
                'id' => 4,
                'name' => '–ö—Ä–æ–≤–∞–≤—ã–µ –∫–æ–ø–∏',
                'description' => '–ó–∞–±—Ä–æ—à–µ–Ω–Ω—ã–µ —à–∞—Ö—Ç—ã, –≥–¥–µ –¥–æ–±—ã–≤–∞–ª–∏ —Ä–µ–¥–∫–∏–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã. –¢–µ–ø–µ—Ä—å —Ç–∞–º –æ–±–∏—Ç–∞—é—Ç —Å—É—â–µ—Å—Ç–≤–∞ –∏–∑ –±–µ–∑–¥–Ω—ã.',
                'image_url' => '/images/locations/blood-mines.jpg',
                'danger_level' => 7,
                'is_default' => false,
                'is_discoverable' => true,
                'position_x' => 0,
                'position_y' => 2,
            ],
        ];

        // –í—Å—Ç–∞–≤–ª—è–µ–º –ª–æ–∫–∞—Ü–∏–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        foreach ($locations as $locationData) {
            Location::create($locationData);
        }

        // –°–æ–∑–¥–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –º–µ–∂–¥—É –ª–æ–∫–∞—Ü–∏—è–º–∏
        $connections = [
            [
                'from_location_id' => 1, // –õ–∞–≥–µ—Ä—å –≤—ã–∂–∏–≤—à–∏—Ö -> –õ–µ—Å–∞ –¢–µ–Ω–µ–π
                'to_location_id' => 2,
                'is_bidirectional' => true,
                'travel_time' => 10, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è
            ],
            [
                'from_location_id' => 2, // –õ–µ—Å–∞ –¢–µ–Ω–µ–π -> –ó–∞–±—ã—Ç—ã–µ —Ä—É–∏–Ω—ã
                'to_location_id' => 3,
                'is_bidirectional' => true,
                'travel_time' => 15, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è
            ],
            [
                'from_location_id' => 3, // –ó–∞–±—ã—Ç—ã–µ —Ä—É–∏–Ω—ã -> –ö—Ä–æ–≤–∞–≤—ã–µ –∫–æ–ø–∏
                'to_location_id' => 4,
                'is_bidirectional' => false,
                'travel_time' => 20, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è
            ],
            [
                'from_location_id' => 4, // –ö—Ä–æ–≤–∞–≤—ã–µ –∫–æ–ø–∏ -> –õ–∞–≥–µ—Ä—å –≤—ã–∂–∏–≤—à–∏—Ö
                'to_location_id' => 1,
                'is_bidirectional' => true,
                'travel_time' => 25, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è
            ],
        ];

        DB::table('location_connections')->insert($connections);

        // –°–æ–∑–¥–∞–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –ª–æ–∫–∞—Ü–∏–π
        $requirements = [
            // –¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ –ø–æ —É—Ä–æ–≤–Ω—é –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∑–∞–±—ã—Ç—ã–µ —Ä—É–∏–Ω—ã
            [
                'location_id' => 3,
                'type' => LocationRequirement::TYPE_LEVEL,
                'parameter' => null,
                'value' => 3, // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å 3
                'description' => '–¢—Ä–µ–±—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 3 —É—Ä–æ–≤–µ–Ω—å –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –ó–∞–±—ã—Ç—ã–µ —Ä—É–∏–Ω—ã',
            ],

            // –¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ –ø–æ —É—Ä–æ–≤–Ω—é –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∫—Ä–æ–≤–∞–≤—ã–µ –∫–æ–ø–∏
            [
                'location_id' => 4,
                'type' => LocationRequirement::TYPE_LEVEL,
                'parameter' => null,
                'value' => 5, // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å 5
                'description' => '–¢—Ä–µ–±—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 5 —É—Ä–æ–≤–µ–Ω—å –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –ö—Ä–æ–≤–∞–≤—ã–µ –∫–æ–ø–∏',
            ],

            // –¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ –ø–æ —Å–∏–ª–µ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∫—Ä–æ–≤–∞–≤—ã–µ –∫–æ–ø–∏
            [
                'location_id' => 4,
                'type' => LocationRequirement::TYPE_ATTRIBUTE,
                'parameter' => 'strength',
                'value' => 6, // –ú–∏–Ω–∏–º—É–º 6 —Å–∏–ª—ã
                'description' => '–¢—Ä–µ–±—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 6 —Å–∏–ª—ã –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ç—è–∂–µ–ª–æ–π –¥–≤–µ—Ä–∏ –≤ –ö—Ä–æ–≤–∞–≤—ã–µ –∫–æ–ø–∏',
            ],
        ];

        // –í—Å—Ç–∞–≤–ª—è–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        foreach ($requirements as $requirementData) {
            LocationRequirement::create($requirementData);
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç—ã –Ω–∞ –ª–æ–∫–∞—Ü–∏–∏
        $objects = [
            // –û–±—ä–µ–∫—Ç—ã –≤ –ª–∞–≥–µ—Ä–µ –≤—ã–∂–∏–≤—à–∏—Ö
            [
                'location_id' => 1,
                'object_id' => 'tavern',
                'type' => 'building',
                'name' => '–¢–∞–≤–µ—Ä–Ω–∞ "–ö—Ä–æ–≤–∞–≤—ã–π –∫—É–±–æ–∫"',
                'description' => '–ú–µ—Å—Ç–æ, –≥–¥–µ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø—Ä–∏—é—Ç –∏ —É—Å–ª—ã—à–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–ª—É—Ö–∏.',
                'icon' => 'üè†',
            ],
            [
                'location_id' => 1,
                'object_id' => 'blacksmith',
                'type' => 'building',
                'name' => '–ö—É–∑–Ω–∏—Ü–∞ –ø—Ä–æ–∫–ª—è—Ç—ã—Ö',
                'description' => '–ö—É–∑–Ω–∏—Ü–∞, –≥–¥–µ –º–∞—Å—Ç–µ—Ä –ì–æ—Ä–∞–Ω —Å–æ–∑–¥–∞–µ—Ç –æ—Ä—É–∂–∏–µ –∏–∑ —Ä–µ–¥–∫–∏—Ö –º–µ—Ç–∞–ª–ª–æ–≤.',
                'icon' => '‚öíÔ∏è',
            ],
            [
                'location_id' => 1,
                'object_id' => 'merchant',
                'type' => 'npc',
                'name' => '–¢–æ—Ä–≥–æ–≤–µ—Ü –ú–∞–ª–≤–µ—Ä',
                'description' => '–ó–∞–≥–∞–¥–æ—á–Ω—ã–π —Ç–æ—Ä–≥–æ–≤–µ—Ü —Å —Ä–µ–¥–∫–∏–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ —Å—Ç—Ä–∞–Ω–Ω–æ–π —É–ª—ã–±–∫–æ–π.',
                'icon' => 'üë®‚Äçü¶≥',
            ],
            [
                'location_id' => 1,
                'object_id' => 'quest-giver',
                'type' => 'npc',
                'name' => '–°—Ç–∞—Ä–µ–π—à–∏–Ω–∞ –ò—Ä–º–µ–ª—å',
                'description' => '–•—Ä–∞–Ω–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∑–Ω–∞–Ω–∏–π, –∫–æ—Ç–æ—Ä–∞—è –¥–∞–µ—Ç –∑–∞–¥–∞–Ω–∏—è –æ—Ç–≤–∞–∂–Ω—ã–º –∞–≤–∞–Ω—Ç—é—Ä–∏—Å—Ç–∞–º.',
                'icon' => 'üëµ',
            ],

            // –û–±—ä–µ–∫—Ç—ã –≤ –ª–µ—Å—É —Ç–µ–Ω–µ–π
            [
                'location_id' => 2,
                'object_id' => 'wounded-wolf',
                'type' => 'monster',
                'name' => '–†–∞–Ω–µ–Ω—ã–π —Ç–µ–Ω–µ–≤–æ–π –≤–æ–ª–∫',
                'description' => '–û–ø–∞—Å–Ω–æ–µ —Å—É—â–µ—Å—Ç–≤–æ, –æ—Å–ª–∞–±–ª–µ–Ω–Ω–æ–µ —Ä–∞–Ω–∞–º–∏. –•–æ—Ä–æ—à–∞—è –¥–æ–±—ã—á–∞ –¥–ª—è –Ω–æ–≤–∏—á–∫–∞.',
                'icon' => 'üê∫',
            ],

            // –û–±—ä–µ–∫—Ç—ã –≤ –∑–∞–±—ã—Ç—ã—Ö —Ä—É–∏–Ω–∞—Ö
            [
                'location_id' => 3,
                'object_id' => 'skeleton-warrior',
                'type' => 'monster',
                'name' => '–°–∫–µ–ª–µ—Ç-–≤–æ–∏–Ω',
                'description' => '–î—Ä–µ–≤–Ω–∏–π –≤–æ–∏–Ω, –ø–æ–¥–Ω—è—Ç—ã–π —á–µ—Ä–Ω–æ–π –º–∞–≥–∏–µ–π. –û—Ö—Ä–∞–Ω—è–µ—Ç —Ä—É–∏–Ω—ã –æ—Ç –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö.',
                'icon' => 'üíÄ',
            ],

            // –û–±—ä–µ–∫—Ç—ã –≤ –∫—Ä–æ–≤–∞–≤—ã—Ö –∫–æ–ø—è—Ö
            [
                'location_id' => 4,
                'object_id' => 'dark-mage',
                'type' => 'monster',
                'name' => '–¢–µ–º–Ω—ã–π –º–∞–≥',
                'description' => '–ú–æ–≥—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —á–∞—Ä–æ–¥–µ–π, –∏–∑—É—á–∞—é—â–∏–π —Å–∏–ª—ã –±–µ–∑–¥–Ω—ã –≤ –≥–ª—É–±–∏–Ω–∞—Ö –∫–æ–ø–µ–π.',
                'icon' => 'üßô‚Äç‚ôÇÔ∏è',
            ],
        ];

        // –í—Å—Ç–∞–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        foreach ($objects as $objectData) {
            DB::table('location_objects')->insert($objectData);
        }

        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ character_discovered_locations
        // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ü–µ–ª–µ–π –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –ª–æ–∫–∞—Ü–∏–∏ –ø–µ—Ä–≤–æ–º—É –ø–µ—Ä—Å–æ–Ω–∞–∂—É
        $testDiscoveredLocations = [];

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂
        $testCharacterId = DB::table('characters')->first()->id ?? null;

        if ($testCharacterId) {
            // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –ª–æ–∫–∞—Ü–∏–∏ –∫–∞–∫ –æ—Ç–∫—Ä—ã—Ç—ã–µ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
            foreach ($locations as $location) {
                $testDiscoveredLocations[] = [
                    'character_id' => $testCharacterId,
                    'location_id' => $location['id'],
                    'discovered_at' => now(),
                ];
            }

            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –ª–æ–∫–∞—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–∞ –õ–∞–≥–µ—Ä—å –≤—ã–∂–∏–≤—à–∏—Ö
            DB::table('characters')
                ->where('id', $testCharacterId)
                ->update(['current_location_id' => 1]);
        }

        // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        if (!empty($testDiscoveredLocations)) {
            DB::table('character_discovered_locations')->insert($testDiscoveredLocations);
        }
    }
}
