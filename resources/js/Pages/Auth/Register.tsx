import React, { useState, useEffect } from "react";
import { Link, useNavigate } from "react-router-dom";
import MainLayout from "../../Layouts/MainLayout";
import Button from "../../Components/ui/Button";
import StyledInput from "../../Components/ui/StyledInput";
import StyledCheckbox from "../../Components/ui/StyledCheckbox";
import { observer } from "mobx-react-lite";
import authStore from "../../stores/AuthStore";

const Register: React.FC = observer(() => {
    const navigate = useNavigate();
    const [name, setName] = useState("");
    const [email, setEmail] = useState("");
    const [password, setPassword] = useState("");
    const [passwordConfirmation, setPasswordConfirmation] = useState("");
    const [errors, setErrors] = useState<{
        name?: string;
        email?: string;
        password?: string;
        passwordConfirmation?: string;
        general?: string;
    }>({});
    const [agreeToTerms, setAgreeToTerms] = useState(false);

    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
    useEffect(() => {
        if (authStore.isAuthenticated) {
            navigate("/");
        }
    }, [authStore.isAuthenticated, navigate]);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();

        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
        setErrors({});

        // –ë–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
        const newErrors: any = {};
        if (!name) newErrors.name = "–í–≤–µ–¥–∏—Ç–µ –∏–º—è";
        if (!email) newErrors.email = "–í–≤–µ–¥–∏—Ç–µ email";
        if (!password) newErrors.password = "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å";
        if (password !== passwordConfirmation) {
            newErrors.passwordConfirmation = "–ü–µ—á–∞—Ç–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç";
        }
        if (!agreeToTerms) {
            newErrors.general =
                "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–∏–µ —Å –∫—Ä–æ–≤–∞–≤—ã–º –∫–æ–¥–µ–∫—Å–æ–º";
        }

        if (Object.keys(newErrors).length > 0) {
            setErrors(newErrors);
            return;
        }

        // –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –∏–∑ authStore
        const success = await authStore.register(
            name,
            email,
            password,
            passwordConfirmation
        );

        if (!success && authStore.error) {
            setErrors({ general: authStore.error });
        }
    };

    return (
        <MainLayout>
            <div className="relative min-h-[calc(100vh-200px)] flex items-center justify-center py-12">
                {/* –§–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ */}
                <div className="absolute inset-0 bg-[url('/images/backgrounds/register_bg.jpg')] bg-cover bg-center opacity-40"></div>
                <div className="absolute inset-0 bg-gradient-to-t from-gray-900 via-gray-900/80 to-gray-900/60 backdrop-blur-[2px]"></div>

                {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
                <div className="absolute top-10 left-10 w-20 h-20 border-t border-l border-red-700/40"></div>
                <div className="absolute top-10 right-10 w-20 h-20 border-t border-r border-red-700/40"></div>
                <div className="absolute bottom-10 left-10 w-20 h-20 border-b border-l border-red-700/40"></div>
                <div className="absolute bottom-10 right-10 w-20 h-20 border-b border-r border-red-700/40"></div>

                {/* –ú–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —á–∞—Å—Ç–∏—Ü—ã */}
                <div className="absolute inset-0 opacity-30 pointer-events-none mix-blend-lighten">
                    <div className="absolute top-1/4 right-1/3 w-2 h-2 bg-red-600 rounded-full blur-sm animate-ping"></div>
                    <div className="absolute top-1/2 right-1/2 w-1 h-1 bg-red-400 rounded-full blur-sm animate-ping animation-delay-300"></div>
                    <div className="absolute bottom-1/4 right-1/4 w-2 h-2 bg-red-500 rounded-full blur-sm animate-ping animation-delay-700"></div>
                </div>

                <div className="w-full max-w-md z-10">
                    <div className="bg-gradient-to-b from-gray-800 to-gray-900 p-8 shadow-2xl rounded-lg border border-red-900/30 relative overflow-hidden">
                        {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —É–≥–ª—ã */}
                        <div className="absolute top-0 left-0 w-3 h-3 border-t border-l border-red-700/60"></div>
                        <div className="absolute top-0 right-0 w-3 h-3 border-t border-r border-red-700/60"></div>
                        <div className="absolute bottom-0 left-0 w-3 h-3 border-b border-l border-red-700/60"></div>
                        <div className="absolute bottom-0 right-0 w-3 h-3 border-b border-r border-red-700/60"></div>

                        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ñ–æ—Ä–º—ã */}
                        <div className="text-center mb-6">
                            <h2 className="echoes-title text-2xl mb-2 bg-clip-text text-transparent bg-gradient-to-r from-red-400 to-red-700">
                                –ö–†–û–í–ê–í–´–ô –ó–ê–í–ï–¢
                            </h2>
                            <div className="h-0.5 w-3/4 mx-auto bg-gradient-to-r from-red-700/60 to-transparent mb-1"></div>
                            <p className="text-gray-400 text-sm mt-2">
                                –ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å –≤ –º–∏—Ä–µ —Ç–µ–Ω–µ–π –∏ —Ç–∞–π–Ω
                            </p>
                        </div>

                        {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ */}
                        {(errors.general || authStore.error) && (
                            <div className="mb-4 p-3 bg-red-900/40 border border-red-700/50 rounded-md text-red-200 text-sm">
                                {errors.general || authStore.error}
                            </div>
                        )}

                        {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */}
                        {authStore.isLoading && (
                            <div className="mb-4 p-3 bg-gray-900/70 border border-red-700/40 rounded-md text-gray-200 text-sm flex items-center justify-center">
                                <svg
                                    className="animate-spin h-5 w-5 mr-2 text-red-500"
                                    xmlns="http://www.w3.org/2000/svg"
                                    fill="none"
                                    viewBox="0 0 24 24"
                                >
                                    <circle
                                        className="opacity-25"
                                        cx="12"
                                        cy="12"
                                        r="10"
                                        stroke="currentColor"
                                        strokeWidth="4"
                                    ></circle>
                                    <path
                                        className="opacity-75"
                                        fill="currentColor"
                                        d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                                    ></path>
                                </svg>
                                –°–æ–∑–¥–∞–µ–º –¥–æ–≥–æ–≤–æ—Ä...
                            </div>
                        )}

                        <form onSubmit={handleSubmit}>
                            <StyledInput
                                id="name"
                                type="text"
                                label="–ò—Å—Ç–∏–Ω–Ω–æ–µ –∏–º—è"
                                icon="üë§"
                                value={name}
                                onChange={(e) => setName(e.target.value)}
                                error={errors.name}
                                required
                                disabled={authStore.isLoading}
                            />

                            <StyledInput
                                id="email"
                                type="email"
                                label="–ú–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å (Email)"
                                icon="‚úâ"
                                value={email}
                                onChange={(e) => setEmail(e.target.value)}
                                error={errors.email}
                                required
                                disabled={authStore.isLoading}
                            />

                            <StyledInput
                                id="password"
                                type="password"
                                label="–ü–µ—Ä–≤–∞—è –ø–µ—á–∞—Ç—å (–ü–∞—Ä–æ–ª—å)"
                                icon="üîí"
                                value={password}
                                onChange={(e) => setPassword(e.target.value)}
                                error={errors.password}
                                required
                                disabled={authStore.isLoading}
                            />

                            <StyledInput
                                id="password-confirmation"
                                type="password"
                                label="–í—Ç–æ—Ä–∞—è –ø–µ—á–∞—Ç—å (–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ)"
                                icon="üîí"
                                value={passwordConfirmation}
                                onChange={(e) =>
                                    setPasswordConfirmation(e.target.value)
                                }
                                error={errors.passwordConfirmation}
                                required
                                disabled={authStore.isLoading}
                            />

                            <div className="mb-6">
                                <StyledCheckbox
                                    id="terms"
                                    checked={agreeToTerms}
                                    onChange={(e) =>
                                        setAgreeToTerms(e.target.checked)
                                    }
                                    required
                                    disabled={authStore.isLoading}
                                    label={
                                        <>
                                            –Ø —Å–æ–≥–ª–∞—Å–µ–Ω –æ—Ç–¥–∞—Ç—å —Å–≤–æ—é –¥—É—à—É –∏
                                            —Å–ª–µ–¥–æ–≤–∞—Ç—å{" "}
                                            <Link
                                                to="/terms"
                                                className="text-red-400 hover:text-red-300 transition-colors"
                                            >
                                                –∫—Ä–æ–≤–∞–≤–æ–º—É –∫–æ–¥–µ–∫—Å—É
                                            </Link>
                                        </>
                                    }
                                />
                            </div>

                            <div className="relative">
                                <div className="absolute -inset-1 bg-red-900/20 rounded-md blur-sm"></div>
                                <Button
                                    variant="danger"
                                    fullWidth
                                    disabled={
                                        authStore.isLoading || !agreeToTerms
                                    }
                                    type="submit"
                                >
                                    {authStore.isLoading ? (
                                        <span className="flex items-center justify-center">
                                            <svg
                                                className="animate-spin -ml-1 mr-2 h-4 w-4 text-white"
                                                xmlns="http://www.w3.org/2000/svg"
                                                fill="none"
                                                viewBox="0 0 24 24"
                                            >
                                                <circle
                                                    className="opacity-25"
                                                    cx="12"
                                                    cy="12"
                                                    r="10"
                                                    stroke="currentColor"
                                                    strokeWidth="4"
                                                ></circle>
                                                <path
                                                    className="opacity-75"
                                                    fill="currentColor"
                                                    d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                                                ></path>
                                            </svg>
                                            –°–∫—Ä–µ–ø–ª—è–µ–º –∫—Ä–æ–≤—å—é...
                                        </span>
                                    ) : (
                                        <>
                                            <span className="mr-2">üíÄ</span>{" "}
                                            –ó–∞–∫–ª—é—á–∏—Ç—å –¥–æ–≥–æ–≤–æ—Ä
                                        </>
                                    )}
                                </Button>
                            </div>
                        </form>

                        <div className="mt-6 text-center">
                            <p className="text-sm text-gray-400">
                                –£–∂–µ –æ–±—Ä–µ–ª —Å–≤–æ—é —Ç—å–º—É?{" "}
                                <Link
                                    to="/auth"
                                    className="text-red-400 hover:text-red-300 transition-colors font-medium"
                                >
                                    –í–µ—Ä–Ω—É—Ç—å—Å—è –≤–æ –º—Ä–∞–∫
                                </Link>
                            </p>
                        </div>

                        {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç */}
                        <div className="h-0.5 w-full bg-gradient-to-r from-transparent via-red-900/30 to-transparent mt-6"></div>
                    </div>
                </div>
            </div>
        </MainLayout>
    );
});

export default Register;
